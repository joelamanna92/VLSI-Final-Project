module add_half (sum,cout,a,b);
    input a,b;
    output cout,sum;

    xor(sum,a,b);
    and (cout,a,b);
endmodule

module full_adder(a,b,cin,cout,sum);
    input a,b,cin;
    output cout,sum;
    wire w1,w2,w3;
    
    add_half a1(w1,w2,a,b);
    add_half a2(sum,w3,cin,w1);
    or (cout,w2,w3);
endmodule

module csa (a,b,cin,cout,sum);
    output[7:0] cout,sum;
    input[7:0] a,b;
    input cin;
    
    wire [15:0]c,s;
    reg [7:0] cout,sum;

    full_adder m0(a[0],b[0],1'b0,c[0],s[0]);
    full_adder m1(a[0],b[0],1'b1,c[1],s[1]);
    full_adder m2(a[1],b[1],1'b0,c[2],s[2]);
    full_adder m3(a[1],b[1],1'b1,c[3],s[3]);
    full_adder m4(a[2],b[2],1'b0,c[4],s[4]);
    full_adder m5(a[2],b[2],1'b1,c[5],s[5]);
    full_adder m6(a[3],b[3],1'b0,c[6],s[6]);
    full_adder m7(a[3],b[3],1'b1,c[7],s[7]);
    full_adder m8(a[4],b[4],1'b0,c[8],s[8]);
    full_adder m9(a[4],b[4],1'b1,c[9],s[9]);
    full_adder m10(a[5],b[5],1'b0,c[10],s[10]);
    full_adder m11(a[5],b[5],1'b1,c[11],s[11]);
    full_adder m12(a[6],b[6],1'b0,c[12],s[12]);
    full_adder m13(a[6],b[6],1'b1,c[13],s[13]);
    full_adder m14(a[7],b[7],1'b0,c[14],s[14]);
    full_adder m15(a[7],b[7],1'b1,c[15],s[15]);



    always @ (a,b,cin,s,c) begin
        if (cin==0) begin
            cout[0]=c[0];
            sum[0]=s[0];
        end

        case (cout[0])
            1'b0: begin    cout[1]=c[2];
                           sum[1]=s[2];end
            1'b1: begin   cout[1]=c[3];
                          sum[1]=s[3];end
        endcase

        case (cout[1])
            1'b0: begin    cout[2]=c[4];
                           sum[2]=s[4];
            end
            1'b1: begin   cout[2]=c[5];
                          sum[2]=s[5];
            end
        endcase
   
        case (cout[2])
            1'b0: begin    cout[3]=c[6];
                           sum[3]=s[6];
            end
            1'b1: begin   cout[3]=c[7];
                          sum[3]=s[7];
            end
        endcase

 

        case (cout[3])
            1'b0: begin    cout[4]=c[8];
                            sum[4]=s[8];
            end
            1'b1: begin   cout[4]=c[9];
                          sum[4]=s[9];
            end
        endcase
   

        case (cout[4])
            1'b0: begin    cout[5]=c[10];
                sum[5]=s[10];
            end
            1'b1: begin   cout[5]=c[11];
                sum[5]=s[11];
            end
        endcase

 

        case (cout[5])
            1'b0: begin    cout[6]=c[12];
                sum[6]=s[12];
            end
            1'b1: begin   cout[6]=c[13];
                sum[6]=s[13];
            end
        endcase

 

        case (cout[6])
            1'b0: begin    cout[7]=c[14];
                sum[7]=s[14];
            end
            1'b1: begin   cout[7]=c[15];
                sum[7]=s[15];
            end
        endcase


end
endmodule